{"version":3,"sources":["Header.js","Tabela.js","Formulario.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","href","TableHead","TableBody","props","linhas","autores","map","linha","index","key","nome","livro","preco","onClick","removeAutor","Tabela","_this$props","this","Tabela_TableHead","Tabela_TableBody","Component","Formulario","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","escutadorInput","event","_event$target","target","name","value","setState","defineProperty","submitFormulario","escutadorSubmit","state","stateInicial","_this$state","htmlFor","id","type","onChange","App","filter","autor","posAtual","concat","toConsumableArray","react","src_Header","src_Tabela","src_Formulario","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"qQA0BeA,qBAxBA,WAEX,OACIC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,KAAGE,KAAK,IAAID,UAAU,cAAtB,cACIH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,8BACVH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,KAAGE,KAAK,YAAR,YAEJJ,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,KAAGE,KAAK,WAAR,WAEJJ,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,KAAGE,KAAK,UAAR,gBCdtBC,EAAY,WACd,OACIL,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,wBAMNI,EAAY,SAAAC,GAEd,IAAMC,EAASD,EAAME,QAAQC,IAAI,SAACC,EAAOC,GACtC,OACAZ,EAAAC,EAAAC,cAAA,MAAIW,IAAKD,GACJZ,EAAAC,EAAAC,cAAA,UAAKS,EAAMG,MACXd,EAAAC,EAAAC,cAAA,UAAKS,EAAMI,OACXf,EAAAC,EAAAC,cAAA,UAAKS,EAAMK,OACXhB,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UACIe,QAAU,kBAAMV,EAAMW,YAAYN,IAClCT,UAAU,iDAFd,eAUZ,OACIH,EAAAC,EAAAC,cAAA,aACGM,IAqBIW,mLAZH,IAAAC,EAC6BC,KAAKd,MAA9BE,EADJW,EACIX,QAASS,EADbE,EACaF,YAEjB,OACAlB,EAAAC,EAAAC,cAAA,SAAOC,UAAU,sBACjBH,EAAAC,EAAAC,cAACoB,EAAD,MACAtB,EAAAC,EAAAC,cAACqB,EAAD,CAAWd,QAASA,EAASS,YAAaA,YAT7BM,oBCwCNC,cA/EX,SAAAA,EAAYlB,GAAM,IAAAmB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAN,KAAAI,IACdC,EAAAC,OAAAE,EAAA,EAAAF,CAAAN,KAAAM,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAAV,KAAMd,KAUVyB,eAAiB,SAAAC,GAAQ,IAAAC,EACCD,EAAME,OAArBC,EADcF,EACdE,KAAMC,EADQH,EACRG,MAEbX,EAAKY,SAALX,OAAAY,EAAA,EAAAZ,CAAA,GACKS,EAAOC,KAfEX,EAmBlBc,iBAAmB,WACfd,EAAKnB,MAAMkC,gBAAgBf,EAAKgB,OAChChB,EAAKY,SAASZ,EAAKiB,eAlBnBjB,EAAKiB,aAAc,CACf7B,KAAM,GACNC,MAAO,GACPC,MAAO,IAEXU,EAAKgB,MAAQhB,EAAKiB,aARJjB,wEAwBT,IAAAkB,EAEyBvB,KAAKqB,MAA3B5B,EAFH8B,EAEG9B,KAAMC,EAFT6B,EAES7B,MAAOC,EAFhB4B,EAEgB5B,MAErB,OACIhB,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,SAAO2C,QAAQ,QAAf,QACA7C,EAAAC,EAAAC,cAAA,SACIC,UAAU,WACV2C,GAAG,OACHC,KAAK,OACLX,KAAK,OACLC,MAAOvB,EACPkC,SAAU3B,KAAKW,kBAIvBhC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,SAAO2C,QAAQ,SAAf,SACA7C,EAAAC,EAAAC,cAAA,SACIC,UAAU,WACV2C,GAAG,QACHC,KAAK,OACLX,KAAK,QACLC,MAAOtB,EACPiC,SAAU3B,KAAKW,kBAIvBhC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,SAAO2C,QAAQ,SAAf,YACA7C,EAAAC,EAAAC,cAAA,SACIC,UAAU,WACV2C,GAAG,QACHC,KAAK,OACLX,KAAK,QACLC,MAAOrB,EACPgC,SAAU3B,KAAKW,mBAI3BhC,EAAAC,EAAAC,cAAA,UACIe,QAASI,KAAKmB,iBACdO,KAAK,SACL5C,UAAU,iDAHd,kBArESqB,aC8DVyB,6MAtDXP,MAAO,CACLjC,QAAS,CACP,CACEK,KAAM,QACNC,MAAO,QACPC,MAAO,QAET,CACEF,KAAM,SACNC,MAAO,OACPC,MAAO,MAET,CACEF,KAAM,SACNC,MAAO,SACPC,MAAO,OAET,CACEF,KAAM,QACNC,MAAO,SACPC,MAAO,WAKbE,YAAc,SAAAN,GAAQ,IACZH,EAAYiB,EAAKgB,MAAjBjC,QAERiB,EAAKY,SAAS,CACZ7B,QAASA,EAAQyC,OAAO,SAACC,EAAMC,GAC7B,OAAOA,IAAaxC,SAK1B6B,gBAAkB,SAAAU,GAChBzB,EAAKY,SAAS,CACZ7B,QAAO,GAAA4C,OAAA1B,OAAA2B,EAAA,EAAA3B,CAAKD,EAAKgB,MAAMjC,SAAhB,CAAyB0C,+EAKpC,OACEnD,EAAAC,EAAAC,cAACqD,EAAA,SAAD,KACIvD,EAAAC,EAAAC,cAACsD,EAAD,MACAxD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAACuD,EAAD,CAAQhD,QAASY,KAAKqB,MAAMjC,QAASS,YAAaG,KAAKH,cACvDlB,EAAAC,EAAAC,cAACwD,EAAD,CAAMjB,gBAAiBpB,KAAKoB,2BAjDtBjB,aCIEmC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOjE,EAAAC,EAAAC,cAACgE,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.de87d192.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = () => {\n\n    return (\n        <nav>\n            <div className=\"nav-wrapper indigo lighten-2\">\n                <div className=\"container\">\n                <a href=\"/\" className=\"brand-logo\">Biblioteca</a>\n                    <ul className=\"right hide-on-med-and-down\">\n                        <li>\n                            <a href=\"/autores\">Autores</a>\n                        </li>\n                        <li>\n                            <a href=\"/livros\">Livros</a>\n                        </li>\n                        <li>\n                            <a href=\"/sobre\">Sobre</a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </nav>\n    );\n}\n\nexport default Header;","import React, { Component } from 'react';\n\n\nconst TableHead = () => {\n    return(\n        <thead>\n          <tr>\n            <th>Autor</th>\n            <th>Livro</th>\n            <th>Preco</th>\n            <th>Remover</th>\n          </tr>\n        </thead>\n    );\n}\n\nconst TableBody = props =>{\n    \n    const linhas = props.autores.map((linha, index)=>{\n       return( \n       <tr key={index}>\n            <td>{linha.nome}</td>\n            <td>{linha.livro}</td>\n            <td>{linha.preco}</td>\n            <td>\n                <button \n                    onClick={ () => props.removeAutor(index)}\n                    className=\"waves-effect waves-light btn indigo lighten-2\">\n                    Remover\n                </button>\n            </td>\n        </tr>\n       );\n    });\n\n    return(\n        <tbody>\n          {linhas}\n        </tbody>\n    );\n}\n\n\nclass Tabela extends Component{\n    \n\n    render(){\n        const { autores, removeAutor } = this.props;\n        \n        return(\n        <table className=\"highlight centered\">\n        <TableHead />\n        <TableBody autores={autores} removeAutor={removeAutor} />\n        </table>\n        );\n    }\n\n}\nexport default Tabela;","import React, { Component } from 'react';\n\nclass Formulario extends Component {\n\n    constructor(props){\n        super(props);\n\n        this.stateInicial ={\n            nome: '',\n            livro: '',\n            preco: '',\n        }\n        this.state = this.stateInicial;\n    }\n\n    escutadorInput = event =>{\n        const {name, value} = event.target;\n\n        this.setState({\n            [name]: value\n        });\n    }\n\n    submitFormulario = () =>{\n        this.props.escutadorSubmit(this.state);\n        this.setState(this.stateInicial);\n    }\n\n    render() {\n\n        const { nome, livro, preco} = this.state;\n\n        return (\n            <form>\n                <div className=\"row m-10\">\n                    <div className=\"input-field col s4\">\n                        <label htmlFor=\"nome\">Nome</label>\n                        <input\n                            className=\"validate\"\n                            id=\"nome\"\n                            type=\"text\"\n                            name=\"nome\"\n                            value={nome}\n                            onChange={this.escutadorInput}\n                        />\n                    </div>\n\n                    <div className=\"input-field col s4\">\n                        <label htmlFor=\"livro\">Livro</label>\n                        <input\n                            className=\"validate\"\n                            id=\"livro\"\n                            type=\"text\"\n                            name=\"livro\"\n                            value={livro}\n                            onChange={this.escutadorInput}\n                        />\n                    </div>\n                    \n                    <div className=\"input-field col s4\">\n                        <label htmlFor=\"preco\">Pre√ßo</label>\n                        <input\n                            className=\"validate\"\n                            id=\"preco\"\n                            type=\"text\"\n                            name=\"preco\"\n                            value={preco}\n                            onChange={this.escutadorInput}\n                        />\n                    </div>\n                </div>\n                <button \n                    onClick={this.submitFormulario} \n                    type=\"button\"\n                    className=\"waves-effect waves-light btn indigo lighten-2\">\n                    Salvar\n                </button>\n\n            </form>\n        );\n    }\n}\n\nexport default Formulario;","import React, { Component, Fragment } from 'react';\nimport 'materialize-css/dist/css/materialize.min.css';\nimport 'materialize-css/dist/js/materialize.min.js'\nimport './App.css'\nimport Header from './Header'\nimport Tabela from './Tabela';\nimport Form from './Formulario';\n\nclass App extends Component {\n  \n    state ={\n      autores: [\n        {\n          nome: 'Paulo',\n          livro: 'React',\n          preco: '1000'\n        },\n        {\n          nome: 'Daniel',\n          livro: 'Java',\n          preco: '99'\n        },\n        {\n          nome: 'Marcos',\n          livro: 'Design',\n          preco: '150'\n        },\n        {\n          nome: 'Bruno',\n          livro: 'DevOps',\n          preco: '100'\n        }\n      ],\n    }\n\n    removeAutor = index =>{\n      const { autores } = this.state;\n\n      this.setState({\n        autores: autores.filter((autor,posAtual) => {\n          return posAtual !== index; \n        }),\n      });\n    }\n\n    escutadorSubmit = autor =>{\n      this.setState({\n        autores:[...this.state.autores, autor]\n      });\n    }\n\n  render() {\n    return (\n      <Fragment>\n          <Header />\n          <div className=\"container m-10\">\n            <Tabela autores={this.state.autores} removeAutor={this.removeAutor} />  \n            <Form escutadorSubmit={this.escutadorSubmit} />\n          </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}